language: cpp

notifications:
  email: false

matrix:
  include:

  - name: "Linux GCC C++11"
    os: linux
    dist: bionic
    compiler: gcc
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-8
          - g++-8
    before_script:
      - CPP_VERSION=11

      # Install new alternatives
      - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 30
      - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 30

  - name: "Linux GCC C++14"
    os: linux
    dist: bionic
    compiler: gcc
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-8
          - g++-8
    before_script:
      - CPP_VERSION=14

      # Install new alternatives
      - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 30
      - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 30

  - name: "Linux GCC C++17"
    os: linux
    dist: bionic
    compiler: gcc
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-8
          - g++-8
    before_script:
      - CPP_VERSION=17

      # Install new alternatives
      - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 30
      - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 30

  - name: "Linux CLANG C++11"
    os: linux
    dist: bionic
    compiler: clang
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-8
          - g++-8
          - clang-7
    before_script:
      - CPP_VERSION=11

  - name: "Linux CLANG C++14"
    os: linux
    dist: bionic
    compiler: clang
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-8
          - g++-8
          - clang-7
    before_script:
      - CPP_VERSION=14

  - name: "Linux CLANG C++17"
    os: linux
    dist: bionic
    compiler: clang
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-8
          - g++-8
          - clang-7
    before_script:
      - CPP_VERSION=17

  - name: "Windows MSVC C++11"
    os: windows
    compiler: msvc
    before_script:
      - CPP_VERSION=11

  - name: "Windows MSVC C++14"
    os: windows
    compiler: msvc
    before_script:
      - CPP_VERSION=14

  - name: "Windows MSVC C++17"
    os: windows
    compiler: msvc
    before_script:
      - CPP_VERSION=17

  - name: "Linux GCC Code Coverage"
    os: linux
    dist: bionic
    compiler: gcc
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-8
          - g++-8
    before_script:
      # Install new alternatives
      - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 30
      - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 30

      # Enable code coverage
      - ENABLE_COVERAGE=True

    after_success:
      # Upload reports to Codecov
      - bash <(curl -s https://codecov.io/bash) -x gcov-8

script:
  # Fetch submodules
  - git submodule init
  - git submodule update

  # Create build directory
  - mkdir -p build
  - cd build

  # Generate build files
  - cmake .. -DBITFLAGS_CPP_VERSION:INTEGER=${CPP_VERSION-17} -DBITFLAGS_ENABLE_COVERAGE:BOOL=${ENABLE_COVERAGE-False}

  # Compile tests
  - cmake --build . --target tests

  # Execute tests
  - ctest